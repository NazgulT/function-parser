Parsing FOL sentence with Function Symbols!
Processing file FunKB.txt
Parsing expression with function symbols: ((F(x) ~= Adam) --> (M(x) ~= Beth))
Domain D = [Adam, Beth]
Variables = {x}
Relational KB x = (~F(x, Adam) --> ~M(x, Beth))
CNF = (~M(x, Beth) | F(x, Adam))
Adding an arbitrary constant = Lisa
Adding another arbitrary constant = Carol
Terms =  {F(Beth), M(Beth), M(Lisa), F(Lisa), F(Adam), M(Adam), M(Carol), F(Carol)}
Parsing time = 0.05525374412536621
Successfully parsed an expression. 
The output is written to propKB.txt
Query = ((F(Carol) == Adam) | (M(Carol) ~= Beth))
STARTING INFERENCE
Query = x8 v !a
processing several queries
Running C2D (propositonal inference)
Z = exp(15.772486116083343) = 7077887.999999986
Z(query) = exp(15.079338935523399) = 3538943.999999999
P(x8) = exp(-0.6931471805599436) = 0.5000000000000009
Running C2D (propositonal inference)
Z = exp(15.772486116083343) = 7077887.999999986
Z(query) = exp(15.079338935523399) = 3538943.999999999
P(a) = exp(-0.6931471805599436) = 0.5000000000000009
Elapsed time=0.749853339


Parsing FOL sentence with Function Symbols!
Processing file FunKB.txt
Parsing expression with function symbols: ((F(x) ~= Adam) --> (M(x) ~= Beth))
Domain D = [Beth, Adam]
Variables = {x}
Relational KB x = (~F(x, Adam) --> ~M(x, Beth))
CNF = (~M(x, Beth) | F(x, Adam))
Adding an arbitrary constant = Lorde
Adding another arbitrary constant = Ellis
Terms =  {F(Beth), F(Lorde), F(Ellis), F(Adam), M(Lorde), M(Ellis), M(Adam), M(Beth)}
Parsing time = 0.05489945411682129
Successfully parsed an expression. 
The output is written to propKB.txt
Query = (M(Beth) == Beth)
STARTING INFERENCE
Query = z
peocessing one query
q=z
Running C2D (propositonal inference)
Z = exp(15.772486116083343) = 7077887.999999986
Z(query) = exp(14.673873827415235) = 2359296.000000001
P(z) = exp(-1.0986122886681073) = 0.3333333333333341
Elapsed time=0.722990094


Parsing FOL sentence with Function Symbols!
Processing file FunKB.txt
Parsing expression with function symbols: ((F(x) ~= Adam) --> (M(x) ~= Beth))
Domain D = [Adam, Beth]
Variables = {x}
Relational KB x = (~F(x, Adam) --> ~M(x, Beth))
CNF = (~M(x, Beth) | F(x, Adam))
Adding an arbitrary constant = Lisa
Adding another arbitrary constant = Amy
Terms =  {M(Beth), F(Beth), F(Lisa), F(Adam), M(Amy), M(Lisa), M(Adam), F(Amy)}
Parsing time = 0.054968833923339844
Successfully parsed an expression. 
The output is written to propKB.txt
Query = ((M(Adam) ~= Beth) | (F(Adam) == Adam))
STARTING INFERENCE
Query = !z v y
processing several queries
Running C2D (propositonal inference)
Z = exp(15.772486116083344) = 7077887.999999999
Z(query) = exp(15.367021007975179) = 4718591.999999994
P(y) = exp(-0.4054651081081655) = 0.666666666666666
Running C2D (propositonal inference)
Z = exp(15.772486116083344) = 7077887.999999999
Z(query) = exp(14.673873827415234) = 2359295.9999999967
P(z) = exp(-1.098612288668111) = 0.3333333333333329
Elapsed time=0.75819914


