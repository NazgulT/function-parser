Parsing FOL sentence with Function Symbols!
Processing file FunKB.txt
Parsing expression with function symbols: (S(x) --> (E(y) ~= x))
Domain D = []
Variables = {x, y}
Increased domain to the size of variables. D = [Amy, Ellis]
Relational KB x = (S(x) --> ~E(y, x))
CNF = (~E(y, x) | ~S(x))
Adding an arbitrary constant = Carol
Adding another arbitrary constant = Lorde
Terms =  {S(x), E(Carol), E(Lorde), S(Amy), S(Ellis), E(Amy), S(Carol), S(Lorde), E(y), E(Ellis)}
Parsing time = 0.06849145889282227
Successfully parsed an expression. 
The output is written to propKB.txt
Query = S(Adam)
STARTING INFERENCE
Query = c7
peocessing one query
q=c7
Running C2D (propositonal inference)
Z = exp(24.208035318459068) = 3.2614907903999866E10
Z(query) = exp(24.208035318459068) = 3.2614907903999866E10
P(c7) = exp(0.0) = 1.0
Elapsed time=0.731501533


Parsing FOL sentence with Function Symbols!
Processing file FunKB.txt
Parsing expression with function symbols: (S(x) --> (E(y) ~= x))
Domain D = []
Variables = {y, x}
Increased domain to the size of variables. D = [Carol, Bob]
Relational KB x = (S(x) --> ~E(y, x))
CNF = (~E(y, x) | ~S(x))
Adding an arbitrary constant = Ellis
Adding another arbitrary constant = Adam
Terms =  {S(Ellis), E(Bob), E(Adam), E(Carol), S(Carol), E(y), S(x), E(Ellis), S(Bob), S(Adam)}
Parsing time = 0.06864476203918457
Successfully parsed an expression. 
The output is written to propKB.txt
Query = (S(Adam) | (E(Bob) == Adam))
STARTING INFERENCE
Query = c7 v g
processing several queries
Running C2D (propositonal inference)
Z = exp(24.208035318459068) = 3.2614907903999866E10
Z(query) = exp(24.208035318459068) = 3.2614907903999866E10
P(c7) = exp(0.0) = 1.0
Running C2D (propositonal inference)
Z = exp(24.208035318459068) = 3.2614907903999866E10
Z(query) = exp(23.514888137899124) = 1.6307453951999962E10
P(g) = exp(-0.6931471805599436) = 0.5000000000000009
Elapsed time=0.806935986


Parsing FOL sentence with Function Symbols!
Processing file FunKB.txt
Parsing expression with function symbols: (S(Adam) & (S(x) --> (E(y) ~= x)))
Domain D = [Adam]
Variables = {y, x}
Relational KB x = (S(Adam) & (S(x) --> ~E(y, x)))
CNF = (S(Adam) & (~E(y, x) | ~S(x)))
Adding an arbitrary constant = Lorde
Adding another arbitrary constant = Beth
Terms =  {S(Lorde), S(x), S(Beth), E(Adam), E(Lorde), E(y), S(Adam), E(Beth)}
Parsing time = 0.009819507598876953
Successfully parsed an expression. 
The output is written to propKB.txt
Query = S(Bob)
STARTING INFERENCE
Query = u5
peocessing one query
q=u5
Running C2D (propositonal inference)
Z = exp(12.412110728941444) = 245759.99999999997
Z(query) = exp(12.412110728941444) = 245759.99999999997
P(u5) = exp(0.0) = 1.0
Elapsed time=0.585944661


Parsing FOL sentence with Function Symbols!
Processing file FunKB.txt
Parsing expression with function symbols: (S(Adam) & (S(x) --> (E(y) ~= x)))
Domain D = [Adam]
Variables = {x, y}
Relational KB x = (S(Adam) & (S(x) --> ~E(y, x)))
CNF = (S(Adam) & (~E(y, x) | ~S(x)))
Adding an arbitrary constant = Beth
Adding another arbitrary constant = Ellis
Terms =  {E(Adam), S(Beth), S(Adam), E(Beth), E(y), E(Ellis), S(Ellis), S(x)}
Parsing time = 0.009934663772583008
Successfully parsed an expression. 
The output is written to propKB.txt
Query = (E(Bob) == Adam)
STARTING INFERENCE
Query = d
peocessing one query
q=d
Running C2D (propositonal inference)
Z = exp(12.412110728941444) = 245759.99999999997
Z(query) = exp(11.718963548381499) = 122879.99999999997
P(d) = exp(-0.6931471805599454) = 0.49999999999999994
Elapsed time=0.563658643


